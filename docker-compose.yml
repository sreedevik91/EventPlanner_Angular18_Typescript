# version: '3.9'

services:
  api-gateway:
    build:
      context: .  # ‚Üê Sets root as build context
      dockerfile: api-gateway/Dockerfile
    environment:
      - NODE_ENV=production
      - PORT=4000
      - USER_SERVCE=http://user-service:3001
      - SERVICES_SERVICE=http://services-service:3002
      - EVENT_SERVICE=http://event-service:3003
      - BOOKING_SERVICE=http://booking-service:3004
      - CHAT_SERVICE=http://chat-service:3005
      - FRONTEND=http://frontend:4200
      - JWT_ACCESS_SECRET=sreedeviEventPlannerApplicationAccessToken
      - JWT_REFRESH_SECRET=sreedeviEventPlannerApplicationRefreshToken
      - GRPC_USER_SERVER=user-service:50051
    ports:
      - "4000:4000"
    networks:
      - event_planner_network
    depends_on:
      - user-service

  user-service:
    build:
      context: .
      dockerfile: backend/user/Dockerfile
    ports:
      - "3001:3001"
      - "50051:50051"
    environment:
      - PORT=3001
      - JWT_ACCESS_SECRET=sreedeviEventPlannerApplicationAccessToken
      - JWT_REFRESH_SECRET=sreedeviEventPlannerApplicationRefreshToken
      - GOOGLE_ID=464375724320-2aug4rpcgj3qv8rnjraa0uu3ikjjbuqt.apps.googleusercontent.com
      - GOOGLE_SECRET=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
      - EMAIL_APP_PASSWORD=uthk sxnz gvsl dqbb
      - EMAIL_USER=sreedevisooraj15@gmail.com
      - EMAIL_URL=http://api-gateway:4000/
      - GOOGLE_CALLBACK_URL=http://api-gateway:4000/user/auth/google/callback
      - SESSION_SECRET_KEY=eventplannerapplication
      - GRPC_USER_SERVER=user-service:50051
      - MONGO_URL=mongodb://mongodb:27017/userService
    networks:
      - event_planner_network
    depends_on:
      - mongodb
      - redis

  services-service:
    build:
      context: .
      dockerfile: backend/eventServices/Dockerfile
    ports:
      - "3002:3002"
      - "50052:50052"
    environment:
      - PORT=3002
      - SERVICE_IMG_URL=http://api-gateway:4000/service/uploads/
      - EMAIL_APP_PASSWORD=uthk sxnz gvsl dqbb
      - EMAIL_USER=sreedevisooraj15@gmail.com
      - CLOUDINARY_CLOUD_NAME=dqsfjbusg
      - CLOUDINARY_API_KEY=854145994395918
      - CLOUDINARY_API_SECRET=qyxATSp5Lb2CEZ-DhYaII2YVpKk
      - MONGO_URL=mongodb://mongodb:27017/serviceService
    networks:
      - event_planner_network
    depends_on:
      - mongodb

  event-service:
    build:
      context: .
      dockerfile: backend/eventServices/Dockerfile
    ports:
      - "3003:3003"
      - "50053:50053"
    environment:
      - PORT=3003
      - EVENT_IMG_URL=http://api-gateway:4000/event/uploads/
      - EMAIL_APP_PASSWORD=uthk sxnz gvsl dqbb
      - EMAIL_USER=sreedevisooraj15@gmail.com
      - CLOUDINARY_CLOUD_NAME=dqsfjbusg
      - CLOUDINARY_API_KEY=854145994395918
      - CLOUDINARY_API_SECRET=qyxATSp5Lb2CEZ-DhYaII2YVpKk
      - MONGO_URL=mongodb://mongodb:27017/eventService
    networks:
      - event_planner_network
    depends_on:
      - mongodb

  booking-service:
    build:
      context: .
      dockerfile: backend/booking/Dockerfile
    ports:
      - "3004:3004"
    environment:
      - PORT=3004
      - EMAIL_APP_PASSWORD=uthk sxnz gvsl dqbb
      - EMAIL_USER=sreedevisooraj15@gmail.com
      - RAZORPAY_KEY_ID=rzp_test_85xo26IPuPICSY
      - RAZORPAY_SECRET=7r0r5ty9wj15t69rxcbQtzkL
      - MONGO_URL=mongodb://mongodb:27017/bookingService
    networks:
      - event_planner_network
    depends_on:
      - mongodb

  chat-service:
    build:
      context: .
      dockerfile: backend/chat/Dockerfile
    ports:
      - "3005:3005"
    environment:
      - PORT=3005
      - CLOUDINARY_CLOUD_NAME=dqsfjbusg
      - CLOUDINARY_API_KEY=854145994395918
      - CLOUDINARY_API_SECRET=qyxATSp5Lb2CEZ-DhYaII2YVpKk
      - MONGO_URL=mongodb://mongodb:27017/chatService
    networks:
      - event_planner_network
    depends_on:
      - mongodb

  frontend:
    build:
      context: frontend
      dockerfile: frontend/Dockerfile
    networks:
      - event_planner_network
    depends_on:
      - api-gateway
      - nginx 

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist/frontend:/usr/share/nginx/html
    depends_on:
      - api-gateway
    networks:
      - event_planner_network

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - event_planner_network

  mongodb:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    networks:
      - event_planner_network   


volumes:
  mongo_user_db: {}
  # mongo_event_db: {}
  # mongo_booking_db: {}

networks:
  event_planner_network:
    driver: bridge

