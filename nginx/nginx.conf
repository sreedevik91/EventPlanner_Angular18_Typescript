
events {}
http {
  include /etc/nginx/mime.types;

  # Redirect HTTP to HTTPS
  server {
    listen 80;
    listen [::]:80;
    server_name dreamevents.shop www.dreamevents.shop;
    return 301 https://$host$request_uri;
  }

  server {
    # listen 80;
    # listen [::]:80;

    # server_name localhost;
    # # server_name devents-frontend-nginx.azurewebsites.net;

    listen 443 ssl;
    listen [::]:443 ssl;
    server_name dreamevents.shop www.dreamevents.shop;

    # SSL Certificate Paths
    ssl_certificate /etc/letsencrypt/live/dreamevents.shop/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dreamevents.shop/privkey.pem;
 
    # Angular static files
    root /usr/share/nginx/html;
    index index.html;

    location / {
      try_files $uri $uri/ /index.html;
    }

  

location /api/ {
  # proxy_pass https://devents-api-gateway.azurewebsites.net;
  proxy_pass http://api-gateway:4000;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme; # Indicate HTTPS
  proxy_cookie_path / /; # Ensure cookies are passed
  proxy_pass_request_headers on; # Pass all headers

  # add_header 'Set-Cookie' $sent_http_set_cookie always; # Explicitly forward Set-Cookie


  # Clear any upstream Access-Control-Allow-Origin
      proxy_hide_header Access-Control-Allow-Origin;

  # CORS Headers

  # add_header 'Access-Control-Allow-Origin' '*' always;

  # Dynamic CORS for credentials
  # if ($http_origin ~* (http://localhost|https://dreamevents.shop)) {
  #   add_header 'Access-Control-Allow-Origin' "$http_origin" always;
  # }

  # CORS Configuration
  # add_header 'Access-Control-Allow-Origin' '$http_origin' always; # Dynamic origin   
  add_header 'Access-Control-Allow-Origin' 'https://dreamevents.shop' always;
  add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
  add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
  add_header 'Access-Control-Allow-Credentials' 'true' always;
  add_header 'Access-Control-Expose-Headers' 'Set-Cookie'; # Expose Set-Cookie

  # Preflight
  if ($request_method = 'OPTIONS') {
    return 204;
  }           
}

# location /googleLogin/callback {
#   # Proxy to api-gateway or serve Angular component
#   proxy_pass http://api-gateway:4000; # Adjust if needed
#   proxy_set_header Host $host;
#   proxy_set_header X-Real-IP $remote_addr;
#   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#   proxy_set_header X-Forwarded-Proto $scheme;
#   proxy_cookie_path / /;
# }

    # WebSocket location
    location /socket.io/ {
      proxy_pass http://api-gateway:4000;
      # proxy_pass https://devents-api-gateway.azurewebsites.net;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
      # No CORS headers needed for WebSockets
    }

    location = /favicon.ico {
      log_not_found off;
      access_log off;
    }

    # # Logging
    # access_log /var/log/nginx/access.log;
    # error_log /var/log/nginx/error.log warn;


# Enable detailed logging to debug origin
  log_format custom '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_origin" "$http_referer" "$http_user_agent"';
  access_log /var/log/nginx/access.log custom;
  error_log /var/log/nginx/error.log debug; # Enable debug level for troubleshooting
  

  }
}