# server {
#     listen 80;

#     location / {
#         proxy_pass http://frontend:4200;
#         proxy_set_header Host $host;
#     }

#     location /api/ {
#         proxy_pass http://api-gateway:4000/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "Upgrade";
#         proxy_set_header Host $host;
#     }

#     location /socket.io/ {
#         proxy_pass http://chat-service:3005;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "Upgrade";
#         proxy_set_header Host $host;
#     }
# }


# /etc/nginx/nginx.conf

events {}

# Main HTTP context
http {
   # Docker's internal DNS(127.0.0.11) allows dynamic service discovery.
  resolver 127.0.0.11 valid=30s; 

  # Server block for handling requests

  server {
    listen 80;
    # Explicitly define IPv4 and IPv6 listeners
    listen [::]:80;

    # Proxy frontend requests (Angular)
    location / {
      proxy_pass http://frontend:4200;
      proxy_set_header Host $host;
    }

    # Proxy API gateway requests
    location /api/ {
      proxy_pass http://api-gateway:4000/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
    }

    # Proxy WebSocket requests (chat service)
    location /socket.io/ {
      proxy_pass http://chat-service:3005;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
    }
  }
}