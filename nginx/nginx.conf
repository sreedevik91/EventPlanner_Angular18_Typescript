# server {
#     listen 80;

#     location / {
#         proxy_pass http://frontend:4200;
#         proxy_set_header Host $host;
#     }

#     location /api/ {
#         proxy_pass http://api-gateway:4000/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "Upgrade";
#         proxy_set_header Host $host;
#     }

#     location /socket.io/ {
#         proxy_pass http://chat-service:3005;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "Upgrade";
#         proxy_set_header Host $host;
#     }
# }


# =========================================================================================


# # /etc/nginx/nginx.conf

# events {}

# # Main HTTP context
# http {
#    # Docker's internal DNS(127.0.0.11) allows dynamic service discovery.
#   resolver 127.0.0.11 valid=30s; 

#   # Server block for handling requests

#   server {
#     listen 80;
#     # Explicitly define IPv4 and IPv6 listeners
#     listen [::]:80;

#     # Proxy frontend requests (Angular)
#     location / {
#       # proxy_pass http://frontend:4200;
#       proxy_pass http://frontend:80;
#       proxy_set_header Host $host;
#     }

#     # Proxy API gateway requests
#     location /api/ {
#       proxy_pass http://api-gateway:4000/;
#       proxy_http_version 1.1;
#       proxy_set_header Upgrade $http_upgrade;
#       proxy_set_header Connection "Upgrade";
#       proxy_set_header Host $host;
#     }

#     # Proxy WebSocket requests (chat service)
#     location /socket.io/ {
#       proxy_pass http://chat-service:3005;
#       proxy_http_version 1.1;
#       proxy_set_header Upgrade $http_upgrade;
#       proxy_set_header Connection "Upgrade";
#       proxy_set_header Host $host;
#     }
#   }
# }

# ==================================================================================

events {}
http {
  include /etc/nginx/mime.types;  # ‚Üê Critical for CSS/JS MIME types
  server {
    listen 80;
    listen [::]:80;
    server_name localhost;

    # Serve Angular static files directly
    root /usr/share/nginx/html; # Angular static files
    index index.html;

    location / {
      try_files $uri $uri/ /index.html;  # Handle client-side routing
    }

    # Proxy API requests to api-gateway
    location /api/ {
      proxy_pass http://api-gateway:4000/;
      proxy_set_header Host $host;
      proxy_set_header Origin $http_origin; # üëà Preserve origin
      proxy_set_header Access-Control-Request-Method $request_method;
      proxy_set_header Access-Control-Request-Headers $http_access_control_request_headers;
    }

    # Proxy WebSocket
    location /socket.io/ {
      proxy_pass http://chat-service:3005;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
      proxy_set_header Origin $http_origin; # üëà Preserve origin
    }
     # Explicitly handle favicon to avoid loops
    location = /favicon.ico {
      log_not_found off;
      access_log off;
    }
  }
}